# This workflow will build and test a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time

name: Java CD with Maven

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

permissions:
  pull-requests: write
  contents: write
  checks: write
  issues: write
  repository-projects: write

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Set up JDK 18
        uses: actions/setup-java@v3
        with:
          java-version: '18'
          distribution: 'corretto'
          cache: maven
      - name: Package
        run: mvn -B package
      - name: Deploy release
        uses: WebFreak001/deploy-nightly@v2.0.0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # automatically provided by github actions
        with:
          upload_url: https://uploads.github.com/repos/SG-O/tagy/releases/114093545/assets{?name,label} # find out this value by opening https://api.github.com/repos/<owner>/<repo>/releases in your browser and copy the full "upload_url" value including the {?name,label} part
          release_id: 114093545 # same as above (id can just be taken out the upload_url, it's used to find old releases)
          asset_path: ./tagyUi/target/tagyUI.jar # path to archive to upload
          asset_name: tagyUi-cd-$$.jar # name to upload the release as, use $$ to insert date (YYYYMMDD) and 6 letter commit hash
          asset_content_type: application/x-java-archive # required by GitHub API
          max_releases: 3 # optional, if there are more releases than this matching the asset_name, the oldest ones are going to be deleted